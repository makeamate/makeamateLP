{"version":3,"file":"component---src-pages-404-tsx-ee84de8e326e7ab8882d.js","mappings":"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","sources":["webpack://ricardo-de-leon/./src/components/styles/ColorStyles.ts","webpack://ricardo-de-leon/./src/components/styles/GlobalStyle.ts","webpack://ricardo-de-leon/./src/components/styles/TextStyles.ts","webpack://ricardo-de-leon/./src/components/background/NotFoundBackground.tsx","webpack://ricardo-de-leon/./src/pages/404.tsx","webpack://ricardo-de-leon/./src/components/layout/Seo.js"],"sourcesContent":["export const themes = {\r\n  light: {\r\n    text1: `black`,\r\n    text2: `rgba(0,0,0,0.7)`,\r\n    primary: `#3913B8`,\r\n    secondary: \"#2FB5FC\",\r\n    backgroundColor: `#f2f6ff`,\r\n    card: {\r\n      backgroundColor: `rgba(255, 255, 255, 0.6)`,\r\n      boxShadow: `0px 50px 100px rgba(34, 79, 169, 0.3),\r\n        inset 0 0 0 0.5px rgba(255, 255, 255, 0.6)`,\r\n      backgroundColorFull: `rgba(255, 255, 255, 1)`,\r\n    },\r\n    cardHover: {\r\n      backgroundColor: `rgba(68, 66, 178, 0.1)`,\r\n      boxShadow: `inset 0px 0px 0px 0.5px rgba(68, 66, 178, 0.2)`,\r\n    },\r\n    pricingCard: {\r\n      backgroundColor: `rgba(255, 255, 255, 0.3)`,\r\n    },\r\n    status: {\r\n      backgroundColor: \"rgba(68, 66, 178, 0.1)\",\r\n    },\r\n    modal: {\r\n      backgroundColor: `rgba(255, 255, 255, 0.6)`,\r\n      boxShadow: `0px 50px 100px rgba(34, 79, 169, 0.3),\r\n        inset 0 0 0 0.5px rgba(255, 255, 255, 0.6)`,\r\n      backgroundColorFull: `rgba(255, 255, 255, 1)`,\r\n    },\r\n  },\r\n  dark: {\r\n    text1: `white`,\r\n    text2: `rgba(255,255,255,0.7)`,\r\n    backgroundColor: `#1F1F47`,\r\n    card: {\r\n      backgroundColor: `rgba(25, 24, 63, 0.98)`,\r\n      boxShadow: `0px 30px 60px rgba(0, 0, 0, 0.25),\r\n        inset 0 0 0 0.5px rgba(255, 255, 255, 0.2)`,\r\n      backgroundColorFull: `rgba(15, 14, 71, 1)`,\r\n    },\r\n    cardHover: {\r\n      backgroundColor: `rgba(255, 255, 255, 0.1)`,\r\n      boxShadow: `inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.2)`,\r\n    },\r\n    pricingCard: {\r\n      backgroundColor: `rgba(31, 31, 71, 0.6)`,\r\n    },\r\n    status: {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n    },\r\n    modal: {\r\n      backgroundColor: `rgba(50, 61, 109, 0.5)`,\r\n      boxShadow: `0px 50px 100px rgba(0, 0, 0, 0.25),\r\n        inset 0 0 0 0.5px rgba(255, 255, 255, 0.3)`,\r\n      backgroundColorFull: `rgba(15, 14, 71, 1)`,\r\n    },\r\n  },\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { themes } from \"./ColorStyles\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    body {\r\n        background: ${themes.light.backgroundColor};\r\n\r\n        @media (prefers-color-scheme: dark) {\r\n            background: ${themes.dark.backgroundColor};\r\n        }\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const H1: HTMLElement = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 60px;\r\n`;\r\n\r\nexport const H2: HTMLElement = styled.h2`\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 28px;\r\n  }\r\n`;\r\nexport const H3: HTMLElement = styled.h3`\r\n  font-size: 28px;\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\nexport const BodyIntro: HTMLElement = styled.p`\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  line-height: 140%;\r\n`;\r\nexport const BodyMain: HTMLElement = styled.p`\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n`;\r\nexport const MediumText: HTMLElement = styled.p`\r\n  font-weight: normal;\r\n  font-size: 18px;\r\n  line-height: 140%;\r\n`;\r\nexport const Caption: HTMLElement = styled.p`\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n`;\r\nexport const Caption2: HTMLElement = styled.p`\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n  text-transform: uppercase;\r\n`;\r\nexport const SmallText: HTMLElement = styled.p`\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  line-height: 130%;\r\n`;\r\nexport const SmallText2: HTMLElement = styled.p`\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n  line-height: 130%;\r\n  text-transform: uppercase;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NotfoundBackground: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Wave src=\"/images/waves/testimonial-wave5.svg\" style={{ top: \"50px\" }} />\r\n      <BottomWave src=\"/images/waves/hero-wave3.svg\" style={{ top: \"250px\" }} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NotfoundBackground;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst Wave = styled.img`\r\n  position: absolute;\r\n  z-index: -1;\r\n\r\n  @media (min-width: 1440px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst BottomWave = styled(Wave)`\r\n  @media (prefers-color-scheme: dark) {\r\n    content: url(\"images/waves/hero-wave3-dark.svg\");\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport SEO from \"../components/layout/Seo\";\r\nimport { GlobalStyle } from \"../components/styles/GlobalStyle\";\r\nimport { H1, H2, Caption } from \"../components/styles/TextStyles\";\r\nimport { themes } from \"../components/styles/ColorStyles\";\r\nimport NotFoundBackground from \"../components/background/NotFoundBackground\";\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <GlobalStyle />\r\n      <SEO\r\n        title=\"Error 404: Not found - Ricardo De Leon\"\r\n        description=\"Default screen for 404 error\"\r\n      />\r\n      <NotFoundBackground />\r\n      <Container>\r\n        <Title>404</Title>\r\n        <Message>How did you get here?</Message>\r\n        <Message>It seems you got lost... </Message>\r\n        <a href=\"/\" style={{ width: 320 }}>\r\n          <Link>\r\n            <Button>Go back home</Button>{\" \"}\r\n          </Link>\r\n        </a>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n\r\nconst Wrapper = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 932px;\r\n  height: 422px;\r\n  margin: 100px auto;\r\n  padding: 20px;\r\n\r\n  background: rgba(15, 14, 71, 0.25);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(4px);\r\n  border: 1px solid rgba(255, 255, 255, 0.18);\r\n\r\n  border-radius: 40px;\r\n\r\n  @media (prefers-color-scheme: light) {\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border: 0.5px solid rgba(255, 255, 255, 0.5);\r\n    box-shadow: 0px 50px 60px rgba(0, 0, 0, 0.25);\r\n  }\r\n  @media (max-width: 900px) {\r\n    width: 770px;\r\n    height: 520px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 500px;\r\n    height: 620px;\r\n  }\r\n  @media (max-width: 550px) {\r\n    width: 320px;\r\n    height: 420px;\r\n    padding: 0;\r\n  }\r\n  @media (max-width: 322px) {\r\n    width: 270px;\r\n    height: 445px;\r\n  }\r\n`;\r\n\r\nconst Title = styled(H1)`\r\n  color: ${themes.dark.text1};\r\n  text-align: center;\r\n\r\n  @media (prefers-color-scheme: light) {\r\n    color: ${themes.light.text1};\r\n  }\r\n  @media (max-width: 550px) {\r\n    margin-top: 40px;\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst Message = styled(H2)`\r\n  color: ${themes.dark.text2};\r\n  text-align: center;\r\n  margin-top: 40px;\r\n\r\n  @media (prefers-color-scheme: light) {\r\n    color: ${themes.light.text2};\r\n  }\r\n  @media (max-width: 768px) {\r\n    margin-top: 100px;\r\n  }\r\n  @media (max-width: 550px) {\r\n    margin-top: 40px;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst Link = styled.div`\r\n  position: absolute;\r\n  top: 340px;\r\n  left: 315px;\r\n\r\n  @media (max-width: 900px) {\r\n    top: 440px;\r\n    left: 230px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    top: 540px;\r\n    left: 88px;\r\n  }\r\n  @media (max-width: 550px) {\r\n    top: 355px;\r\n    left: 60px;\r\n  }\r\n  @media (max-width: 320px) {\r\n    top: 380px;\r\n    left: 33px;\r\n  }\r\n`;\r\n\r\nconst Button = styled(Caption)`\r\n  width: 320px;\r\n  height: 44px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${themes.dark.text2};\r\n\r\n  background: linear-gradient(91.4deg, #2fb8ff 0%, #9eecd9 100%);\r\n  box-shadow: 0px 20px 40px rgba(147, 231, 221, 0.3);\r\n  border-radius: 30px;\r\n\r\n  @media (prefers-color-scheme: light) {\r\n    color: ${themes.light.text2};\r\n  }\r\n  @media (max-width: 550px) {\r\n    width: 200px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nfunction SEO({ description, title, keywords, image, url, author }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n            image\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n  const metaTitle = title || site.siteMetadata?.title;\r\n  const metaAuthor = author || site.siteMetadata.author;\r\n  const metaUrl = url || site.siteMetadata.siteUrl;\r\n  const metaImage = image || site.siteMetadata.image;\r\n  const metaKeywords = keywords || [\r\n    \"react developer\",\r\n    \"react native developer\",\r\n    \"front-end developer\",\r\n    \"frontend developer\",\r\n    \"web developer\",\r\n    \"desarrollador web\",\r\n    \"desarrollador frontend\",\r\n    \"ricardodeleon\",\r\n    \"Ricardo De Leon\",\r\n    \"ricardo de leon\",\r\n  ];\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang: \"en\",\r\n      }}\r\n      title={metaTitle}\r\n      titleTemplate={metaTitle}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `keywords`,\r\n          content: metaKeywords,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `og:image`,\r\n          content: metaImage,\r\n        },\r\n        {\r\n          name: `og:url`,\r\n          content: metaUrl,\r\n        },\r\n        {\r\n          name: `github:card`,\r\n          content: `summary_large_image`,\r\n        },\r\n        {\r\n          name: `github:site`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `github:creator`,\r\n          content: metaAuthor,\r\n        },\r\n        {\r\n          name: `github:title`,\r\n          content: title,\r\n        },\r\n      ].concat(\r\n        metaKeywords && metaKeywords.lenth > 0\r\n          ? {\r\n              name: `keywords`,\r\n              content: metaKeywords.join(`, `),\r\n            }\r\n          : []\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n  keywords: PropTypes.string,\r\n  image: PropTypes.string,\r\n  url: PropTypes.string,\r\n  author: PropTypes.string,\r\n};\r\n\r\nexport default SEO;\r\n"],"names":["themes","light","text1","text2","primary","secondary","backgroundColor","card","boxShadow","backgroundColorFull","cardHover","pricingCard","status","modal","dark","GlobalStyle","createGlobalStyle","H1","styled","H2","H3","MediumText","Caption","Caption2","SmallText","Wrapper","Wave","src","style","top","BottomWave","title","description","NotFoundBackground","Container","Title","Message","href","width","Link","Button","keywords","image","url","author","site","useStaticQuery","metaDescription","siteMetadata","metaTitle","metaAuthor","metaUrl","siteUrl","metaImage","metaKeywords","Helmet","htmlAttributes","lang","titleTemplate","meta","name","content","property","concat","lenth","join"],"sourceRoot":""}